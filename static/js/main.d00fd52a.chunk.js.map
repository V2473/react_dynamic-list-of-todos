{"version":3,"sources":["components/TodoItem.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["TodoItem","todo","user","className","completed","type","id","checked","htmlFor","name","title","TodoList","todos","users","map","key","filter","userId","App","useState","setTodos","setUsers","useEffect","fetch","then","response","json","data","onClick","sorted","sort","a","b","localeCompare","name1","find","name2","undefined","length","ReactDOM","render","document","getElementById"],"mappings":"sOA8BeA,EAtBmB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACzC,OACE,wBAAIC,UAAWF,EAAKG,UAAY,YAAc,IAC5C,yBAAKD,UAAU,QACb,2BACEE,KAAK,WACLF,UAAU,SACVG,GAAE,eAAUL,EAAKK,IACjBC,QAASN,EAAKG,YAEhB,2BACEI,QAAO,eAAUP,EAAKK,KAErBJ,EAAKO,KACL,MACAR,EAAKS,UCADC,EAdmB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC1C,OACE,wBAAIV,UAAU,aACXS,EAAME,KAAI,SAACb,GAAD,OACT,kBAAC,EAAD,CACEc,IAAKd,EAAKK,GACVL,KAAMA,EACNC,KAAI,eAAOW,EAAMG,QAAO,SAACd,GAAD,OAAgBA,EAAKI,KAAOL,EAAKgB,UAAQ,WC0E5DC,G,MArFO,WAAO,IAAD,EACAC,mBAAiB,IADjB,mBACnBP,EADmB,KACZQ,EADY,OAEAD,mBAAiB,IAFjB,mBAEnBN,EAFmB,KAEZQ,EAFY,KAI1BC,qBAAU,WACRC,MAAM,2CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJL,EAASK,EAASE,WAErB,IAEHL,qBAAU,WACRC,MAAM,2CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJJ,EAASI,EAASE,WAErB,IA6BH,OACE,6BAASxB,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCAEA,4BAAQE,KAAK,SAASuB,QAhCN,WACpB,IAAMC,EAAS,YAAIjB,GAAOkB,MAAK,SAACC,EAASC,GAAV,OAAuBD,EAAErB,MAAOuB,cAAcD,EAAEtB,UAE/EU,EAASS,KA6BL,SAGC,IACD,4BAAQxB,KAAK,SAASuB,QA9BF,WACxB,IAAMC,EAAS,YAAIjB,GAAOkB,MAAK,SAACC,EAASC,GAAV,OAAuBD,EAAE3B,WAAa4B,EAAE5B,aAEvEgB,EAASS,KA2BL,aAGC,IACD,4BAAQxB,KAAK,SAASuB,QA5BP,WACnB,IAAMC,EAAS,YAAIjB,GAAOkB,MAAK,SAACC,EAASC,GACvC,IAAME,EAA0BrB,EAAMsB,MAAK,SAACjC,GAAD,OAAgBA,EAAKI,KAAOyB,EAAEd,UACnEmB,EAA0BvB,EAAMsB,MAAK,SAACjC,GAAD,OAAgBA,EAAKI,KAAO0B,EAAEf,UAEzE,OAAc,OAAViB,QAA4BG,IAAVH,GAAiC,OAAVE,QAA4BC,IAAVD,EACtDF,EAAMzB,KAAKwB,cAAcG,EAAM3B,MAGjC,KAGTW,EAASS,KAgBL,SAKF,6BACE1B,UAAWS,EAAM0B,OAAS,EAAI,OAAS,aAEvC,kBAAC,EAAD,CACE1B,MAAOA,EACPC,MAAOA,KAIX,4BAAQV,UAAWS,EAAM0B,OAAS,EAAI,SAAW,eAC/C,0BAAMnC,UAAU,cACbS,EAAMI,QAAO,SAACf,GAAD,OAAiBA,EAAKG,aAAWkC,OAC9C,IAFH,kBC5ERC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d00fd52a.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo, User } from '../interfaces';\n\ninterface Props {\n  todo: Todo;\n  user: User;\n}\n\nconst TodoItem: React.FC<Props> = ({ todo, user }) => {\n  return (\n    <li className={todo.completed ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={`todo-${todo.id}`}\n          checked={todo.completed}\n        />\n        <label\n          htmlFor={`todo-${todo.id}`}\n        >\n          {user.name}\n          {' - '}\n          {todo.title}\n        </label>\n      </div>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\nimport { Todo, User } from '../interfaces';\n\ninterface Props {\n  todos: Todo[];\n  users: User[];\n}\n\nconst TodoList: React.FC<Props> = ({ todos, users }) => {\n  return (\n    <ul className=\"todo-list\">\n      {todos.map((todo: Todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          user={{ ...users.filter((user: User) => user.id === todo.userId)[0] }}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport { Todo, User } from './interfaces';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n\n  useEffect(() => {\n    fetch('https://mate.academy/students-api/todos')\n      .then(response => response.json())\n      .then(response => {\n        setTodos(response.data);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch('https://mate.academy/students-api/users')\n      .then(response => response.json())\n      .then(response => {\n        setUsers(response.data);\n      });\n  }, []);\n\n  const onSortbyTitle = () => {\n    const sorted = [...todos].sort((a: Todo, b: Todo) => (a.title).localeCompare(b.title));\n\n    setTodos(sorted);\n  };\n\n  const onSortbyCompleted = () => {\n    const sorted = [...todos].sort((a: Todo, b: Todo) => +a.completed - +b.completed);\n\n    setTodos(sorted);\n  };\n\n  const onSortbyName = () => {\n    const sorted = [...todos].sort((a: Todo, b: Todo) => {\n      const name1: User | undefined = users.find((user: User) => user.id === a.userId);\n      const name2: User | undefined = users.find((user: User) => user.id === b.userId);\n\n      if (name1 !== null && name1 !== undefined && name2 !== null && name2 !== undefined) {\n        return name1.name.localeCompare(name2.name);\n      }\n\n      return 0;\n    });\n\n    setTodos(sorted);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <button type=\"button\" onClick={onSortbyTitle}>\n          Title\n        </button>\n        {' '}\n        <button type=\"button\" onClick={onSortbyCompleted}>\n          Completed\n        </button>\n        {' '}\n        <button type=\"button\" onClick={onSortbyName}>\n          Name\n        </button>\n      </header>\n\n      <section\n        className={todos.length > 0 ? 'main' : 'main hide'}\n      >\n        <TodoList\n          todos={todos}\n          users={users}\n        />\n      </section>\n\n      <footer className={todos.length > 0 ? 'footer' : 'footer hide'}>\n        <span className=\"todo-count\">\n          {todos.filter((todo: Todo) => !todo.completed).length}\n          {' '}\n          items left\n        </span>\n      </footer>\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}